// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int     @id @default(autoincrement())
  email    String  @unique
  password String
  name     String?
  habits   Habit[]
}

model Habit {
  id              Int               @id @default(autoincrement())
  title           String
  createdAt       DateTime          @default(now()) 
  spheres         Spheres[]         @relation("HabitSpheres")
  status          Status            @default(active)
  user            User?             @relation(fields: [userId], references: [id])
  userId          Int?
  habitCompletions HabitCompletion[]
}

model HabitCompletion {
  id          Int      @id @default(autoincrement())
  habit       Habit    @relation(fields: [habitId], references: [id])
  habitId     Int
  completedAt DateTime
  notes       String? // Add notes about this particular completion
  mood        Int? // Track mood when completing habit
  difficulty  Int? // Track how difficult it was
  duration    Int? // Track how long it took
}

model Spheres {
  id       Int     @id @default(autoincrement())
  title    String
  habits   Habit[] @relation("HabitSpheres")
  habitIds Int[]
}

enum Status {
  active
  archived
  deleted
  completed
}

enum FrequencyType {
  DAILY
  WEEKLY
  MONTHLY
}
